// <auto-generated />
using System;
using Infraestrutura.Data.Sessions;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Infraestrutura.Data.Migrations
{
    [DbContext(typeof(OrdemDeServicoSession))]
    partial class OrdemDeServicoSessionModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("Dominio.Clientes.AnotacaoDeCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("Data")
                        .HasColumnType("timestamp without time zone");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uuid");

                    b.Property<string>("Texto")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("AnotacaoDeCliente");
                });

            modelBuilder.Entity("Dominio.Clientes.Cliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<bool>("Ativo")
                        .HasColumnType("boolean");

                    b.Property<string>("CelularPrincipal")
                        .HasColumnType("text");

                    b.Property<string>("CnpjCpf")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateDeNascimento")
                        .HasColumnType("timestamp without time zone");

                    b.Property<string>("EmailPrincipal")
                        .HasColumnType("text");

                    b.Property<string>("Nome")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Cliente");
                });

            modelBuilder.Entity("Dominio.Clientes.EnderecoDoCliente", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Bairro")
                        .HasColumnType("text");

                    b.Property<string>("Cep")
                        .HasColumnType("text");

                    b.Property<Guid?>("ClienteId")
                        .HasColumnType("uuid");

                    b.Property<string>("ComplementoLogradouro")
                        .HasColumnType("text");

                    b.Property<Guid>("IdCliente")
                        .HasColumnType("uuid");

                    b.Property<string>("Logradouro")
                        .HasColumnType("text");

                    b.Property<string>("Municipio")
                        .HasColumnType("text");

                    b.Property<string>("NumeroLogradouro")
                        .HasColumnType("text");

                    b.Property<string>("Uf")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("EnderecoDoCliente");
                });

            modelBuilder.Entity("Dominio.Clientes.AnotacaoDeCliente", b =>
                {
                    b.HasOne("Dominio.Clientes.Cliente", "Cliente")
                        .WithMany("Anotacoes")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.Clientes.EnderecoDoCliente", b =>
                {
                    b.HasOne("Dominio.Clientes.Cliente", "Cliente")
                        .WithMany("Enderecos")
                        .HasForeignKey("ClienteId");

                    b.Navigation("Cliente");
                });

            modelBuilder.Entity("Dominio.Clientes.Cliente", b =>
                {
                    b.Navigation("Anotacoes");

                    b.Navigation("Enderecos");
                });
#pragma warning restore 612, 618
        }
    }
}
